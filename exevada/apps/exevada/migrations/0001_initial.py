# Generated by Django 3.0.6 on 2020-06-06 21:24

import django.contrib.gis.db.models.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Attribution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('variable', models.CharField(choices=[('Tmax', 'maximum temperature'), ('Tmin', 'minimum temperature'), ('Tmean', 'mean temperature'), ('Pr', 'precipitation')], help_text='Event variable', max_length=16)),
                ('fitted_distribution', models.CharField(choices=[('Gauss', 'Gauss'), ('Generalized Pareto', 'generalized Pareto'), ('Generalized Extreme Value', 'generalized extreme value'), ('Gumbel', 'Gumbel'), ('Gamma', 'gamma')], help_text='Statistical model', max_length=64)),
                ('pr', models.FloatField(help_text='Synthesis probability ratio', validators=[django.core.validators.MinValueValidator(0.0)])),
                ('delta_i', models.FloatField(help_text='Synthesis change in intensity')),
                ('conclusions', models.TextField(help_text='Synthesis conclusions')),
                ('contact', models.CharField(help_text='Contact email adress', max_length=1024)),
                ('webpage', models.URLField(help_text='Relevant web page', max_length=512)),
            ],
        ),
        migrations.CreateModel(
            name='ModelDataSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(help_text='Observation dataset', max_length=256)),
                ('experiment', models.TextField(help_text='Experiment description')),
                ('url', models.URLField(max_length=512, unique=True)),
                ('doi', models.CharField(help_text='DOI of dataset', max_length=256, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ObservationDataSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Observation dataset', max_length=256)),
                ('url', models.URLField(max_length=512, unique=True)),
                ('doi', models.CharField(help_text='DOI of dataset', max_length=256, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Region name', max_length=256, unique=True)),
                ('area', django.contrib.gis.db.models.fields.MultiPolygonField(help_text='One or more polygons making up the region', srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='PressCommunication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Publication title', max_length=1024)),
                ('doi', models.CharField(help_text='DOI (no URL) of related publication', max_length=256, unique=True)),
                ('authors', models.CharField(help_text='Author list', max_length=1024)),
                ('date', models.DateField(help_text='Publication date')),
                ('url', models.URLField(max_length=512, unique=True)),
                ('medium', models.CharField(help_text='Medium', max_length=256)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='presscommunications', to='exevada.Attribution')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ObservationAnalysis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mu', models.FloatField(help_text='Fitted location parameter')),
                ('sigma', models.FloatField(help_text='Fitted scale parameter', validators=[django.core.validators.MinValueValidator(0.0)])),
                ('xi', models.FloatField(help_text='Fitted shape parameter')),
                ('lower_bound', models.FloatField(help_text='Return period lower bound', validators=[django.core.validators.MinValueValidator(0.0)])),
                ('upper_bound', models.FloatField(help_text='Return period upper bound', validators=[django.core.validators.MinValueValidator(0.0)])),
                ('pr', models.FloatField(help_text='Probability ratio', validators=[django.core.validators.MinValueValidator(0.0)])),
                ('delta_i', models.FloatField(help_text='Change in intensity')),
                ('comments', models.TextField(help_text='Remarks')),
                ('value', models.FloatField(help_text='Variable value for this observation dataset')),
                ('attribution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='observationanalysiss', to='exevada.Attribution')),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exevada.ObservationDataSet')),
            ],
            options={
                'verbose_name_plural': 'observation analyses',
            },
        ),
        migrations.CreateModel(
            name='ModelAnalysis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mu', models.FloatField(help_text='Fitted location parameter')),
                ('sigma', models.FloatField(help_text='Fitted scale parameter', validators=[django.core.validators.MinValueValidator(0.0)])),
                ('xi', models.FloatField(help_text='Fitted shape parameter')),
                ('value', models.FloatField(help_text='Return period (yr)', validators=[django.core.validators.MinValueValidator(0.0)])),
                ('lower_bound', models.FloatField(help_text='Return period lower bound', validators=[django.core.validators.MinValueValidator(0.0)])),
                ('upper_bound', models.FloatField(help_text='Return period upper bound', validators=[django.core.validators.MinValueValidator(0.0)])),
                ('pr', models.FloatField(help_text='Probability ratio', validators=[django.core.validators.MinValueValidator(0.0)])),
                ('delta_i', models.FloatField(help_text='Change in intensity')),
                ('comments', models.TextField(help_text='Remarks')),
                ('trend', models.FloatField(help_text='Trend')),
                ('attribution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modelanalysiss', to='exevada.Attribution')),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exevada.ModelDataSet')),
            ],
            options={
                'verbose_name_plural': 'model analyses',
            },
        ),
        migrations.CreateModel(
            name='JournalPaper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Publication title', max_length=1024)),
                ('doi', models.CharField(help_text='DOI (no URL) of related publication', max_length=256, unique=True)),
                ('authors', models.CharField(help_text='Author list', max_length=1024)),
                ('date', models.DateField(help_text='Publication date')),
                ('url', models.URLField(max_length=512, unique=True)),
                ('journal', models.CharField(help_text='Journal', max_length=256)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='journalpapers', to='exevada.Attribution')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Short, descriptive name or title for this event', max_length=128)),
                ('startdate', models.DateField(help_text='Event starting date')),
                ('duration', models.PositiveIntegerField(help_text='Duration of the event (nr of days)')),
                ('season', models.CharField(choices=[('DJJ', 'Dec-Feb'), ('MAM', 'Mar-May'), ('JJA', 'Jun-Aug'), ('SON', 'Sep-Nov')], default='DJJ', help_text='Season', max_length=8)),
                ('deaths', models.PositiveIntegerField(help_text='Number of deaths')),
                ('people_affected', models.PositiveIntegerField(help_text='Number of people affected')),
                ('economical_loss', models.DecimalField(decimal_places=2, help_text='Estimated economic loss in Keuro', max_digits=12)),
                ('ecological_impact', models.CharField(help_text='Ecological impact', max_length=2048)),
                ('attribution_request', models.CharField(help_text='Request for attribution', max_length=1024)),
                ('comments', models.TextField(help_text='Remarks')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exevada.Region')),
            ],
        ),
        migrations.AddField(
            model_name='attribution',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attributions', to='exevada.Event'),
        ),
    ]
