# Generated by Django 3.0.3 on 2020-04-03 13:39

import django.contrib.gis.db.models.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Short, descriptive name or title for this event', max_length=512)),
                ('startdate', models.DateField(help_text='Event starting date')),
                ('duration', models.PositiveIntegerField(help_text='Duration of the event in number of (whole) days')),
                ('variable', models.CharField(help_text='Event variable', max_length=255)),
                ('fitted_distribution', models.CharField(help_text='Distribution fitted', max_length=512)),
            ],
        ),
        migrations.CreateModel(
            name='Impact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deaths', models.DecimalField(decimal_places=2, help_text='Number of deaths', max_digits=12)),
                ('affected', models.DecimalField(decimal_places=2, help_text='Number of people affected', max_digits=12)),
                ('request', models.CharField(help_text='Request for attribution', max_length=1024)),
                ('comments', models.TextField(help_text='Remarks')),
            ],
        ),
        migrations.CreateModel(
            name='ObsDataset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField(help_text='Variable value')),
                ('doi', models.CharField(help_text='DOI or URL for the dataset or time series', max_length=512)),
                ('pr', models.FloatField(help_text='Probability ratio', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('delta_i', models.FloatField(help_text='Change in intensity')),
                ('comments', models.TextField(help_text='Remarks')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='observational_datasets', to='exevada.Event')),
            ],
            options={
                'verbose_name': 'observational dataset',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Region name', max_length=255, unique=True)),
                ('area', django.contrib.gis.db.models.fields.MultiPolygonField(help_text='One or more polygons making up the region', srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Synthesis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pr', models.FloatField(help_text='Probability ratio', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('delta_i', models.FloatField(help_text='Change in intensity')),
                ('conclusions', models.TextField(help_text='Conclusions')),
                ('contact', models.CharField(help_text='Contact (e.g., lead author)', max_length=1024)),
                ('webpage', models.URLField(help_text='Relevant web page', max_length=512)),
                ('doi', models.CharField(help_text='DOI (no URL) of related peer-review publication', max_length=255)),
            ],
            options={
                'verbose_name_plural': 'syntheses',
            },
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.IntegerField(choices=[(1, 'January'), (2, 'Februari'), (3, 'March'), (4, 'April'), (5, 'May'), (6, 'June'), (7, 'July'), (8, 'August'), (9, 'September'), (10, 'October'), (11, 'November'), (12, 'December')], help_text='Starting month')),
                ('end', models.IntegerField(choices=[(1, 'January'), (2, 'Februari'), (3, 'March'), (4, 'April'), (5, 'May'), (6, 'June'), (7, 'July'), (8, 'August'), (9, 'September'), (10, 'October'), (11, 'November'), (12, 'December')], help_text='Ending month')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='season', to='exevada.Event')),
            ],
        ),
        migrations.CreateModel(
            name='ReturnTime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField(help_text='Best fit value')),
                ('lower', models.FloatField(help_text='Lower bound')),
                ('upper', models.FloatField(help_text='Upper bound')),
                ('obsdataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='return_period', to='exevada.ObsDataset')),
            ],
        ),
        migrations.CreateModel(
            name='ModelDataset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_type', models.CharField(help_text='Statistical model applied to model data', max_length=512)),
                ('period', models.CharField(help_text='Event return period', max_length=128)),
                ('trend', models.CharField(help_text='Trend', max_length=512)),
                ('pr', models.FloatField(help_text='Probability ratio', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('delta_i', models.FloatField(help_text='Change in intensity')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='model_datasets', to='exevada.Event')),
            ],
        ),
        migrations.CreateModel(
            name='FitParameters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mu', models.FloatField(help_text='Mu value')),
                ('sigma', models.FloatField(help_text='Sigma value')),
                ('xi', models.FloatField(help_text='Xi value')),
                ('alpha', models.FloatField(help_text='Alpha value')),
                ('obsdataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='best_fit_value', to='exevada.ObsDataset')),
            ],
            options={
                'verbose_name_plural': 'fit parameters',
            },
        ),
        migrations.AddField(
            model_name='event',
            name='impact',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='exevada.Impact'),
        ),
        migrations.AddField(
            model_name='event',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exevada.Region'),
        ),
        migrations.AddField(
            model_name='event',
            name='synthesis',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='exevada.Synthesis'),
        ),
    ]
